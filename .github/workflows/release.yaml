on:
  workflow_dispatch:
    inputs:
      package:
        required: true
        type: choice
        description: The name of the package to publish
        options:
          - json_serializable_flutter_converters
          - json_serializable_converters
          - json_serializable_chopper_converter
          - json_serializable_uuid_converter
      flutter-version:
        required: false
        type: string
        default: 3.22.x
        description: The version of Flutter to use
      version:
        required: true
        type: string
        description: The version of the package to publish

permissions:
  contents: write

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          flutter-version: '${{ inputs.flutter-version }}'
          channel: 'stable'
      - name: ⛔️ Disable dart and flutter analytics
        run: |
          dart --disable-analytics
          flutter config --no-analytics
          flutter config --no-cli-animations
      - name: Check formatting
        run: |
          cd packages/${{ inputs.package }}
          find . -name "*.dart" ! -name "*.g.dart" ! -name "*.chopper.dart" ! -path '*/generated/*' ! -path './proto/*' ! -path '*.dart_tool/*' | tr '\n' ' ' | xargs dart format --output=show --set-exit-if-changed --line-length=150

  lint:
    name: Check linter
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          flutter-version: '${{ inputs.flutter-version }}'
          channel: 'stable'
      - name: ⛔️ Disable dart and flutter analytics
        run: |
          dart --disable-analytics
          flutter config --no-analytics
          flutter config --no-cli-animations
      - name: Check formatting
        run: |
          cd packages/${{ inputs.package }}
          flutter analyze --no-pub --no-fatal-infos

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1
      - name: ⚙️ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          flutter-version: '${{ inputs.flutter-version }}'
          channel: 'stable'
      - name: ⛔️ Disable dart and flutter analytics
        run: |
          dart --disable-analytics
          flutter config --no-analytics
          flutter config --no-cli-animations
      - name: Install dependencies
        run: |
          cd packages/${{ inputs.package }}
          flutter pub get
      - name: Run tests
        run: |
          cd packages/${{ inputs.package }}
          flutter test --coverage --coverage-path=coverage/lcov.info --branch-coverage
      - name: ⬆️ Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ inputs.package }}
          path: packages/${{inputs.package}}/coverage/lcov.info

  changelog:
    needs:
      - test
      - format
      - lint
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
      tag: ${{ inputs.package }}-${{ inputs.version }}
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: 🏗 Set up yq
        uses: frenck/action-setup-yq@v1
      - uses: fregante/setup-git-user@v2
      - name: Compile changes for package ${{ inputs.package }}
        id: changelog
        run: |
          LAST_TAG=$(git tag --list '${{ inputs.package }}-*' --sort=creatordate) | head -n 1
          echo "## ${{ inputs.version }}" > tmp.md
          echo "" >> tmp.md
          echo $(git log --pretty="format:- %s ([%h](https://github.com/sbordeyne/dart_json_utils/commit/%H)) %aE" HEAD...$LAST_TAG -- packages/${{ inputs.package }}) >> tmp.md
          echo "" >> tmp.md
          echo "changelog=$(cat tmp.md)" >> $GITHUB_OUTPUT
          cat packages/${{ inputs.package }}/CHANGELOG.md >> tmp.md
          mv tmp.md packages/${{ inputs.package }}/CHANGELOG.md
      - name: Update pubspec.yaml of package ${{ inputs.package }} to version ${{ inputs.version }}
        run: |
          yq eval '.version = "${{ inputs.version }}"' -i packages/${{ inputs.package }}/pubspec.yaml
      - name: Commit changes
        run: |
          git add packages/${{ inputs.package }}/CHANGELOG.md
          git add packages/${{ inputs.package }}/pubspec.yaml
          git commit -m "Update changelog for ${{ inputs.package }} v${{ inputs.version }}"
      - name: Create a tag for the release
        run: |
          git tag -a '${{ inputs.package }}-${{ inputs.version }}' -m 'Release ${{ inputs.package }} v${{ inputs.version }}'
      - name: Push changes
        run: |
          git push origin master

  release:
    runs-on: ubuntu-latest
    needs: changelog
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: 🏗 Set up yq
        uses: frenck/action-setup-yq@v1
      - uses: fregante/setup-git-user@v2
      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-${{ inputs.package }}
          path: lcov.info
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: \# ${{inputs.package}}\n\n${{ needs.changelog.outputs.changelog }}
          files: |
            lcov.info

  publish:
    needs: changelog
    permissions:
      id-token: write # Required for authentication using OIDC
    uses: dart-lang/setup-dart/.github/workflows/publish.yml@v1
    with:
      working-directory: packages/${{ inputs.package }}
